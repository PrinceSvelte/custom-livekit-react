{"code":"import { faMicrophone, faMicrophoneSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { Room } from 'livekit-client';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { ControlButton } from './ControlButton';\r\nexport const AudioSelectButton = ({ isMuted, onClick, onSourceSelected, isButtonDisabled, muteText = 'Mute', unmuteText = 'Unmute', requestPermissions = true, className, popoverContainerClassName, popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName, }) => {\r\n    const [sources, setSources] = useState([]);\r\n    const [menuItems, setMenuItems] = useState([]);\r\n    const listAudioDevices = useCallback(async () => {\r\n        const devices = await Room.getLocalDevices('audioinput', requestPermissions);\r\n        setSources(devices);\r\n        setMenuItems(devices.map((item) => {\r\n            return { label: item.label };\r\n        }));\r\n    }, []);\r\n    useEffect(() => {\r\n        listAudioDevices();\r\n        navigator.mediaDevices.addEventListener('devicechange', listAudioDevices);\r\n        return () => {\r\n            navigator.mediaDevices.removeEventListener('devicechange', listAudioDevices);\r\n        };\r\n    }, []);\r\n    const handleMenuItem = (item) => {\r\n        const device = sources.find((d) => d.label === item.label);\r\n        if (device && onSourceSelected) {\r\n            onSourceSelected(device);\r\n        }\r\n    };\r\n    return (React.createElement(ControlButton, { label: isMuted ? unmuteText : muteText, icon: isMuted ? faMicrophoneSlash : faMicrophone, disabled: isButtonDisabled, onClick: onClick, menuItems: menuItems, onMenuItemClick: handleMenuItem, className: className, popoverContainerClassName: popoverContainerClassName, popoverTriggerBtnClassName: popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName: popoverTriggerBtnSeparatorClassName }));\r\n};\r\n//# sourceMappingURL=AudioSelectButton.js.map","references":["/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@fortawesome/free-solid-svg-icons/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/livekit-client/dist/src/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@types/react/ts5.0/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ControlButton.tsx"],"map":"{\"version\":3,\"file\":\"AudioSelectButton.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/AudioSelectButton.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACpF,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtC,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAChE,OAAO,EAAE,aAAa,EAAY,MAAM,iBAAiB,CAAC;AAgB1D,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAChC,OAAO,EACP,OAAO,EACP,gBAAgB,EAChB,gBAAgB,EAChB,QAAQ,GAAG,MAAM,EACjB,UAAU,GAAG,QAAQ,EACrB,kBAAkB,GAAG,IAAI,EACzB,SAAS,EACT,yBAAyB,EACzB,0BAA0B,EAC1B,mCAAmC,GACZ,EAAE,EAAE;IAC3B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAoB,EAAE,CAAC,CAAC;IAC9D,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAa,EAAE,CAAC,CAAC;IAE3D,MAAM,gBAAgB,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC9C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;QAC7E,UAAU,CAAC,OAAO,CAAC,CAAC;QACpB,YAAY,CACV,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACnB,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,CAAC,GAAG,EAAE;QACb,gBAAgB,EAAE,CAAC;QACnB,SAAS,CAAC,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QAE1E,OAAO,GAAG,EAAE;YACV,SAAS,CAAC,YAAY,CAAC,mBAAmB,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;QAC/E,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,cAAc,GAAG,CAAC,IAAc,EAAE,EAAE;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,MAAM,IAAI,gBAAgB,EAAE;YAC9B,gBAAgB,CAAC,MAAM,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,aAAa,IACZ,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EACtC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,EAChD,QAAQ,EAAE,gBAAgB,EAC1B,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,SAAS,EACpB,eAAe,EAAE,cAAc,EAC/B,SAAS,EAAE,SAAS,EACpB,yBAAyB,EAAE,yBAAyB,EACpD,0BAA0B,EAAE,0BAA0B,EACtD,mCAAmC,EAAE,mCAAmC,GACxE,CACH,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/princerajput/custom-livekit/@livekit/react-components/components/AudioSelectButton.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nexport interface AudioSelectButtonProps {\r\n    isMuted: boolean;\r\n    onClick?: () => void;\r\n    onSourceSelected?: (device: MediaDeviceInfo) => void;\r\n    isButtonDisabled?: boolean;\r\n    muteText?: string;\r\n    unmuteText?: string;\r\n    className?: string;\r\n    requestPermissions?: boolean;\r\n    popoverContainerClassName?: string;\r\n    popoverTriggerBtnClassName?: string;\r\n    popoverTriggerBtnSeparatorClassName?: string;\r\n}\r\nexport declare const AudioSelectButton: ({ isMuted, onClick, onSourceSelected, isButtonDisabled, muteText, unmuteText, requestPermissions, className, popoverContainerClassName, popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName, }: AudioSelectButtonProps) => React.JSX.Element;\r\n"}}
