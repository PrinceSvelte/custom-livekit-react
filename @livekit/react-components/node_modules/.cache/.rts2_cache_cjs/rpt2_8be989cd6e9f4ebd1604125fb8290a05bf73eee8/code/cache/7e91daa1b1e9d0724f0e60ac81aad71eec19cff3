{"code":"import { faVolumeMute } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Track } from 'livekit-client';\r\nimport { AudioRenderer } from '@livekit/react-core';\r\nimport React, { useContext } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { GridStage } from './desktop/GridStage';\r\nimport { SpeakerStage } from './desktop/SpeakerStage';\r\nimport { DisplayContext } from './DisplayContext';\r\nimport { MobileStage } from './mobile/MobileStage';\r\nimport styles from './styles.module.css';\r\nexport const StageView = (stageProps) => {\r\n    const isMobile = useMediaQuery({ query: '(max-width: 800px)' });\r\n    const { room, participants } = stageProps.roomState;\r\n    const context = useContext(DisplayContext);\r\n    let mainElement;\r\n    if (isMobile) {\r\n        mainElement = React.createElement(MobileStage, Object.assign({}, stageProps));\r\n    }\r\n    else {\r\n        // find first participant with screen shared\r\n        let screenTrack;\r\n        participants.forEach((p) => {\r\n            if (screenTrack) {\r\n                return;\r\n            }\r\n            const track = p.getTrack(Track.Source.ScreenShare);\r\n            if (track?.isSubscribed && track.videoTrack) {\r\n                screenTrack = track.videoTrack;\r\n            }\r\n        });\r\n        if (context.stageLayout === 'grid' && screenTrack === undefined) {\r\n            mainElement = React.createElement(GridStage, Object.assign({}, stageProps));\r\n        }\r\n        else {\r\n            mainElement = React.createElement(SpeakerStage, Object.assign({}, stageProps));\r\n        }\r\n    }\r\n    return (React.createElement(\"div\", { className: styles.container },\r\n        mainElement,\r\n        stageProps.roomState.audioTracks.map((track) => (React.createElement(AudioRenderer, { key: track.sid, track: track, isLocal: false }))),\r\n        room?.canPlaybackAudio === false && (React.createElement(\"div\", { className: styles.overlay },\r\n            React.createElement(\"button\", { className: styles.unmuteButton, onClick: () => {\r\n                    room.startAudio();\r\n                } },\r\n                React.createElement(FontAwesomeIcon, { className: styles.icon, size: \"1x\", icon: faVolumeMute }),\r\n                \"Click to Unmute\")))));\r\n};\r\n//# sourceMappingURL=StageView.js.map","references":["/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@fortawesome/free-solid-svg-icons/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@fortawesome/react-fontawesome/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/livekit-client/dist/src/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@livekit/react-core/dist/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@types/react/ts5.0/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/react-responsive/types/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/desktop/GridStage.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/desktop/SpeakerStage.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/DisplayContext.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/mobile/MobileStage.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/StageProps.ts"],"map":"{\"version\":3,\"file\":\"StageView.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/StageView.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,KAAK,EAAc,MAAM,gBAAgB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,KAAK,EAAE,EAAgB,UAAU,EAAE,MAAM,OAAO,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEnD,OAAO,MAAM,MAAM,qBAAqB,CAAC;AAEzC,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,UAAsB,EAAE,EAAE;IAClD,MAAM,QAAQ,GAAG,aAAa,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAChE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC;IACpD,MAAM,OAAO,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC;IAE3C,IAAI,WAAyB,CAAC;IAC9B,IAAI,QAAQ,EAAE;QACZ,WAAW,GAAG,oBAAC,WAAW,oBAAK,UAAU,EAAI,CAAC;KAC/C;SAAM;QACL,4CAA4C;QAC5C,IAAI,WAAmC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACzB,IAAI,WAAW,EAAE;gBACf,OAAO;aACR;YACD,MAAM,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACnD,IAAI,KAAK,EAAE,YAAY,IAAI,KAAK,CAAC,UAAU,EAAE;gBAC3C,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM,IAAI,WAAW,KAAK,SAAS,EAAE;YAC/D,WAAW,GAAG,oBAAC,SAAS,oBAAK,UAAU,EAAI,CAAC;SAC7C;aAAM;YACL,WAAW,GAAG,oBAAC,YAAY,oBAAK,UAAU,EAAI,CAAC;SAChD;KACF;IAED,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS;QAC7B,WAAW;QACX,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAC/C,oBAAC,aAAa,IAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAI,CAChE,CAAC;QAED,IAAI,EAAE,gBAAgB,KAAK,KAAK,IAAI,CACnC,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO;YAC5B,gCACE,SAAS,EAAE,MAAM,CAAC,YAAY,EAC9B,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC;gBAED,oBAAC,eAAe,IAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,IAAI,EAAE,YAAY,GAAI;kCAElE,CACL,CACP,CACG,CACP,CAAC;AACJ,CAAC,CAAC\"}","dts":{"name":"/Users/princerajput/custom-livekit/@livekit/react-components/components/StageView.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { StageProps } from './StageProps';\r\nexport declare const StageView: (stageProps: StageProps) => React.JSX.Element;\r\n"}}
