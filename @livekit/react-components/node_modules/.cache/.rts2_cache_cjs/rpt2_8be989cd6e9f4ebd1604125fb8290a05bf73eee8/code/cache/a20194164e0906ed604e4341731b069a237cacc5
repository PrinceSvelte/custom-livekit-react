{"code":"import { Track } from 'livekit-client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ControlsView } from '../ControlsView';\r\nimport { ParticipantView } from '../ParticipantView';\r\nimport { ScreenShareView } from '../ScreenShareView';\r\nimport { defaultSortParticipants } from '../StageUtils';\r\nimport styles from './styles.module.css';\r\nexport const SpeakerStage = ({ roomState, participantRenderer, controlRenderer, onLeave, sortParticipants, }) => {\r\n    const { isConnecting, error, participants, room } = roomState;\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    const sortFn = sortParticipants ?? defaultSortParticipants;\r\n    const [sortedParticipants, setSortedParticipants] = useState(sortFn(participants));\r\n    useEffect(() => {\r\n        setSortedParticipants(sortFn(participants));\r\n    }, [participants, sortFn]);\r\n    if (error) {\r\n        return React.createElement(\"div\", null,\r\n            \"error \",\r\n            error.message);\r\n    }\r\n    if (isConnecting) {\r\n        return React.createElement(\"div\", null, \"connecting\");\r\n    }\r\n    if (!room) {\r\n        return React.createElement(\"div\", null, \"room closed\");\r\n    }\r\n    if (sortedParticipants.length === 0) {\r\n        return React.createElement(\"div\", null, \"no one is in the room\");\r\n    }\r\n    const ParticipantRenderer = participantRenderer ?? ParticipantView;\r\n    const ControlRenderer = controlRenderer ?? ControlsView;\r\n    // find first participant with screen shared\r\n    let screenTrack;\r\n    sortedParticipants.forEach((p) => {\r\n        if (screenTrack) {\r\n            return;\r\n        }\r\n        const track = p.getTrack(Track.Source.ScreenShare);\r\n        if (track?.isSubscribed && track.videoTrack) {\r\n            screenTrack = track.videoTrack;\r\n        }\r\n    });\r\n    let otherParticipants = sortedParticipants;\r\n    let participantInFocus;\r\n    let mainView;\r\n    if (screenTrack) {\r\n        mainView = React.createElement(ScreenShareView, { track: screenTrack, height: \"100%\", width: \"100%\" });\r\n    }\r\n    else {\r\n        [participantInFocus, ...otherParticipants] = sortedParticipants;\r\n        mainView = (React.createElement(ParticipantRenderer, { key: participantInFocus.identity, participant: participantInFocus, width: \"100%\", height: \"100%\", orientation: \"landscape\", showOverlay: showOverlay, showConnectionQuality: true, onMouseEnter: () => setShowOverlay(true), onMouseLeave: () => setShowOverlay(false) }));\r\n    }\r\n    return (\r\n    // global container\r\n    React.createElement(\"div\", { className: styles.container },\r\n        React.createElement(\"div\", { className: styles.stage },\r\n            React.createElement(\"div\", { className: styles.stageCenter }, mainView),\r\n            React.createElement(\"div\", { className: styles.sidebar }, otherParticipants.map((participant) => {\r\n                return (React.createElement(ParticipantRenderer, { key: participant.identity, participant: participant, width: \"100%\", aspectWidth: 16, aspectHeight: 9, showOverlay: showOverlay, onMouseEnter: () => setShowOverlay(true), onMouseLeave: () => setShowOverlay(false) }));\r\n            }))),\r\n        React.createElement(\"div\", { className: styles.controlsArea },\r\n            React.createElement(ControlRenderer, { room: room, onLeave: onLeave }))));\r\n};\r\n//# sourceMappingURL=SpeakerStage.js.map","references":["/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/livekit-client/dist/src/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@types/react/ts5.0/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ControlsView.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ParticipantView.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ScreenShareView.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/StageProps.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/StageUtils.ts"],"map":"{\"version\":3,\"file\":\"SpeakerStage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/desktop/SpeakerStage.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/princerajput/custom-livekit/@livekit/react-components/components/desktop/SpeakerStage.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { StageProps } from '../StageProps';\r\nexport declare const SpeakerStage: ({ roomState, participantRenderer, controlRenderer, onLeave, sortParticipants, }: StageProps) => React.JSX.Element;\r\n"}}
