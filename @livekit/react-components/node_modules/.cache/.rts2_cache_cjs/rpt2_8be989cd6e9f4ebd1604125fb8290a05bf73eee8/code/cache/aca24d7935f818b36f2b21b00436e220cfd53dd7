{"code":"import { faDesktop, faStop } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nimport { useParticipant } from '@livekit/react-core';\r\nimport { AudioSelectButton } from './AudioSelectButton';\r\nimport { ControlButton } from './ControlButton';\r\nimport styles from './styles.module.css';\r\nimport { VideoSelectButton } from './VideoSelectButton';\r\nexport const ControlsView = ({ room, enableScreenShare, enableAudio, enableVideo, onLeave, }) => {\r\n    const { cameraPublication: camPub, microphonePublication: micPub } = useParticipant(room.localParticipant);\r\n    if (enableScreenShare === undefined) {\r\n        enableScreenShare = true;\r\n    }\r\n    if (enableVideo === undefined) {\r\n        enableVideo = true;\r\n    }\r\n    if (enableAudio === undefined) {\r\n        enableAudio = true;\r\n    }\r\n    const [audioButtonDisabled, setAudioButtonDisabled] = React.useState(false);\r\n    let muteButton;\r\n    if (enableAudio) {\r\n        const enabled = !(micPub?.isMuted ?? true);\r\n        muteButton = (React.createElement(AudioSelectButton, { isMuted: !enabled, isButtonDisabled: audioButtonDisabled, onClick: async () => {\r\n                setAudioButtonDisabled(true);\r\n                room.localParticipant\r\n                    .setMicrophoneEnabled(!enabled)\r\n                    .finally(() => setAudioButtonDisabled(false));\r\n            }, onSourceSelected: (device) => {\r\n                setAudioButtonDisabled(true);\r\n                room\r\n                    .switchActiveDevice('audioinput', device.deviceId)\r\n                    .finally(() => setAudioButtonDisabled(false));\r\n            } }));\r\n    }\r\n    const [videoButtonDisabled, setVideoButtonDisabled] = React.useState(false);\r\n    let videoButton;\r\n    if (enableVideo) {\r\n        const enabled = !(camPub?.isMuted ?? true);\r\n        videoButton = (React.createElement(VideoSelectButton, { isEnabled: enabled, isButtonDisabled: videoButtonDisabled, onClick: () => {\r\n                setVideoButtonDisabled(true);\r\n                room.localParticipant\r\n                    .setCameraEnabled(!enabled)\r\n                    .finally(() => setVideoButtonDisabled(false));\r\n            }, onSourceSelected: (device) => {\r\n                setVideoButtonDisabled(true);\r\n                room\r\n                    .switchActiveDevice('videoinput', device.deviceId)\r\n                    .finally(() => setVideoButtonDisabled(false));\r\n            } }));\r\n    }\r\n    const [screenButtonDisabled, setScreenButtonDisabled] = React.useState(false);\r\n    let screenButton;\r\n    if (enableScreenShare) {\r\n        const enabled = room.localParticipant.isScreenShareEnabled;\r\n        screenButton = (React.createElement(ControlButton, { label: enabled ? 'Stop sharing' : 'Share screen', icon: enabled ? faStop : faDesktop, disabled: screenButtonDisabled, onClick: () => {\r\n                setScreenButtonDisabled(true);\r\n                room.localParticipant\r\n                    .setScreenShareEnabled(!enabled)\r\n                    .finally(() => setScreenButtonDisabled(false));\r\n            } }));\r\n    }\r\n    return (React.createElement(\"div\", { className: styles.controlsWrapper },\r\n        muteButton,\r\n        videoButton,\r\n        screenButton,\r\n        onLeave && (React.createElement(ControlButton, { label: \"End\", className: styles.dangerButton, onClick: () => {\r\n                room.disconnect();\r\n                onLeave(room);\r\n            } }))));\r\n};\r\n//# sourceMappingURL=ControlsView.js.map","references":["/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@fortawesome/free-solid-svg-icons/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/livekit-client/dist/src/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@types/react/ts5.0/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@livekit/react-core/dist/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/AudioSelectButton.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ControlButton.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/VideoSelectButton.tsx"],"map":"{\"version\":3,\"file\":\"ControlsView.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/ControlsView.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/princerajput/custom-livekit/@livekit/react-components/components/ControlsView.d.ts","writeByteOrderMark":false,"text":"import { Room } from 'livekit-client';\r\nimport React from 'react';\r\nexport interface ControlsProps {\r\n    room: Room;\r\n    enableScreenShare?: boolean;\r\n    enableAudio?: boolean;\r\n    enableVideo?: boolean;\r\n    onLeave?: (room: Room) => void;\r\n}\r\nexport declare const ControlsView: ({ room, enableScreenShare, enableAudio, enableVideo, onLeave, }: ControlsProps) => React.JSX.Element;\r\n"}}
