{"code":"import React, { useEffect, useState } from 'react';\r\nimport { ControlsView } from '../ControlsView';\r\nimport { ParticipantView } from '../ParticipantView';\r\nimport styles from './styles.module.css';\r\nexport const GridStage = ({ roomState, participantRenderer, controlRenderer, onLeave, }) => {\r\n    const { isConnecting, error, participants, room } = roomState;\r\n    const [visibleParticipants, setVisibleParticipants] = useState([]);\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    const [gridClass, setGridClass] = React.useState(styles.grid1x1);\r\n    // compute visible participants and sort.\r\n    useEffect(() => {\r\n        // determine grid size\r\n        let numVisible = 1;\r\n        if (participants.length === 1) {\r\n            setGridClass(styles.grid1x1);\r\n        }\r\n        else if (participants.length === 2) {\r\n            setGridClass(styles.grid2x1);\r\n            numVisible = 2;\r\n        }\r\n        else if (participants.length <= 4) {\r\n            setGridClass(styles.grid2x2);\r\n            numVisible = Math.min(participants.length, 4);\r\n        }\r\n        else if (participants.length <= 9) {\r\n            setGridClass(styles.grid3x3);\r\n            numVisible = Math.min(participants.length, 9);\r\n        }\r\n        else if (participants.length <= 16) {\r\n            setGridClass(styles.grid4x4);\r\n            numVisible = Math.min(participants.length, 16);\r\n        }\r\n        else {\r\n            setGridClass(styles.grid5x5);\r\n            numVisible = Math.min(participants.length, 25);\r\n        }\r\n        // remove any participants that are no longer connected\r\n        const newParticipants = [];\r\n        visibleParticipants.forEach((p) => {\r\n            if (room?.participants.has(p.sid) || room?.localParticipant.sid === p.sid) {\r\n                newParticipants.push(p);\r\n            }\r\n        });\r\n        // ensure active speakers are all visible\r\n        room?.activeSpeakers?.forEach((speaker) => {\r\n            if (newParticipants.includes(speaker) ||\r\n                (speaker !== room?.localParticipant && !room?.participants.has(speaker.sid))) {\r\n                return;\r\n            }\r\n            // find a non-active speaker and switch\r\n            const idx = newParticipants.findIndex((p) => !p.isSpeaking);\r\n            if (idx >= 0) {\r\n                newParticipants[idx] = speaker;\r\n            }\r\n            else {\r\n                newParticipants.push(speaker);\r\n            }\r\n        });\r\n        // add other non speakers\r\n        for (const p of participants) {\r\n            if (newParticipants.length >= numVisible) {\r\n                break;\r\n            }\r\n            if (newParticipants.includes(p) || p.isSpeaking) {\r\n                continue;\r\n            }\r\n            newParticipants.push(p);\r\n        }\r\n        if (newParticipants.length > numVisible) {\r\n            newParticipants.splice(numVisible, newParticipants.length - numVisible);\r\n        }\r\n        setVisibleParticipants(newParticipants);\r\n    }, [participants]);\r\n    if (error) {\r\n        return React.createElement(\"div\", null,\r\n            \"error \",\r\n            error.message);\r\n    }\r\n    if (isConnecting) {\r\n        return React.createElement(\"div\", null, \"connecting\");\r\n    }\r\n    if (!room) {\r\n        return React.createElement(\"div\", null, \"room closed\");\r\n    }\r\n    if (participants.length === 0) {\r\n        return React.createElement(\"div\", null, \"no one is in the room\");\r\n    }\r\n    const ParticipantRenderer = participantRenderer ?? ParticipantView;\r\n    const ControlRenderer = controlRenderer ?? ControlsView;\r\n    return (\r\n    // global container\r\n    React.createElement(\"div\", { className: styles.container },\r\n        React.createElement(\"div\", { className: `${styles.gridStage} ${gridClass}` }, visibleParticipants.map((participant) => {\r\n            return (React.createElement(ParticipantRenderer, { key: participant.identity, participant: participant, orientation: \"landscape\", width: \"100%\", height: \"100%\", showOverlay: showOverlay, showConnectionQuality: true, onMouseEnter: () => setShowOverlay(true), onMouseLeave: () => setShowOverlay(false) }));\r\n        })),\r\n        React.createElement(\"div\", { className: styles.controlsArea },\r\n            React.createElement(ControlRenderer, { room: room, onLeave: onLeave }))));\r\n};\r\n//# sourceMappingURL=GridStage.js.map","references":["/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/livekit-client/dist/src/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/node_modules/@types/react/ts5.0/index.d.ts","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ControlsView.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/ParticipantView.tsx","/Users/princerajput/custom-livekit/@livekit/react-components/src/components/StageProps.ts"],"map":"{\"version\":3,\"file\":\"GridStage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/desktop/GridStage.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/princerajput/custom-livekit/@livekit/react-components/components/desktop/GridStage.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { StageProps } from '../StageProps';\r\nexport declare const GridStage: ({ roomState, participantRenderer, controlRenderer, onLeave, }: StageProps) => React.JSX.Element;\r\n"}}
